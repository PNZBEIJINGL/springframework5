<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="5"/> <!--核心线程数 -->
        <property name="maxPoolSize" value="10"/> <!--最大线程数 -->
        <property name="keepAliveSeconds" value ="3000"/> <!--线程最大空闲时间 -->
        <property name="queueCapacity" value="25"/> <!-- 队列大小 -->
        <property name="threadNamePrefix" value="my-pool-"/>
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor.CallerRunsPolicy"/>
        </property>
    </bean>

    <!-- 调用者-->
    <bean id="taskExecutorExample" class="com.spring5.taskexcutor.example.TaskExecutorExample">
        <constructor-arg ref="taskExecutor"/>
    </bean>

    <!-- JobExecutionContextImpl-->
    <bean name="exampleJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.spring5.scheduler.ExampleJob"/>
        <property name="jobDataAsMap">
            <map>
                <entry key="timeout" value="5"/>
            </map>
        </property>
    </bean>

    <!-- Using the MethodInvokingJobDetailFactoryBean-->
    <bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="exampleBusinessObject"/>
        <property name="targetMethod" value="doIt"/>
    </bean>
    <bean id="exampleBusinessObject" class="com.spring5.scheduler.ExampleBusinessObject"/>


    <bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <!-- see the example of method invoking job above -->
        <property name="jobDetail" ref="jobDetail"/>
        <!-- 10 seconds -->
        <property name="startDelay" value="1000"/>
        <!-- repeat every 50 seconds -->
        <property name="repeatInterval" value="5000"/>
    </bean>

    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="exampleJob"/>
        <property name="cronExpression" value="10 * * * * ?"/>
    </bean>


</beans>